name: terraform

on:
  push:
    branches:
      - main
    paths:
      - "packer/**/*windows*"
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: 'Platform'
        options:
        - 'azure'
        - 'vsphere'
      image:
        type: choice
        description: 'OS'
        options:
        - 'win2016'
        - 'win2019'
        - 'win2022'
        - 'rhel'
        - 'rhel-podman'
        


env: 
  # azure packer secrets
  PKR_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
  PKR_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  PKR_VAR_azure_client_id : ${{ secrets.AZURE_CLIENT_ID  }}
  PKR_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
  PKR_VAR_mondoo_registration: ${{ secrets.MONDOO_REGISTRATION }}

  # terraform secrets
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

jobs:
 terraform-azure-1:
    runs-on: ubuntu-latest
    name: Run Terraform Azure
    if : github.event_name == 'azure'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup `terraform`
        uses: hashicorp/setup-terraform@main
        
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        working-directory: terraform/azure-local
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: terraform/azure-local

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform/azure-local

      - name: PWD
        id: pwd
        run: pwd
        working-directory: terraform/azure-local

      - name: Terraform Apply
        id: apply
        run: |
         terraform apply \
         -var bucket_name="windows-2019-base"
        working-directory: terraform/azure-local

      - name: Terraform test
        id: test
        run: |
          terraform apply -auto-approve \
          -var bucket_name="win2019-base" \
          -var vsphere_user="SA-TFC-ADMIN-NONPROD" \
          -var vsphere_password=${{ secrets.VSPHERE_PASSWORD }}
        working-directory: terraform/vsphere